{"mappings":"AAAC,CAAA;IACA,iBAAiB;IACjB,MAAM,OAAO;QACZ,IAAI;YACH,UAAU;YACV,OAAO;YACP,UAAU;YACV,WAAW;YACX,cAAc;YACd,eAAe;YACf,aAAa;YACb,YAAY;YACZ,eAAe;YACf,iBAAiB;YACjB,kBAAkB;YAClB,oBAAoB;YACpB,mBAAmB;YACnB,mBAAmB;YACnB,UAAU;YACV,YAAY;YACZ,WAAW;YACX,WAAW;YACX,eAAe;YACf,iBAAiB;YACjB,cAAc;YACd,UAAU;YACV,cAAc;YACd,aAAa;YACb,YAAY;YACZ,aAAa;YACb,iBAAiB;YACjB,kBAAkB;YAClB,kBAAkB;YAClB,kBAAkB;YAClB,aAAa;YACb,mBAAmB;YACnB,WAAW;QACZ;QACA,IAAI;YACH,UAAU;YACV,OAAO;YACP,UAAU;YACV,WAAW;YACX,cAAc;YACd,eAAe;YACf,aAAa;YACb,YAAY;YACZ,eAAe;YACf,iBAAiB;YACjB,kBAAkB;YAClB,oBAAoB;YACpB,mBAAmB;YACnB,mBAAmB;YACnB,UAAU;YACV,YAAY;YACZ,WAAW;YACX,WAAW;YACX,eAAe;YACf,iBAAiB;YACjB,cAAc;YACd,UAAU;YACV,cAAc;YACd,aAAa;YACb,YAAY;YACZ,aAAa;YACb,iBAAiB;YACjB,kBAAkB;YAClB,kBAAkB;YAClB,kBAAkB;YAClB,aAAa;YACb,mBAAmB;YACnB,WAAW;QACZ;IACD;IAEA,IAAI,gBAAgB;IAEpB,SAAS;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,UAAU,QAAQ,UAAU,MAAM,OAAO;QAC7C,MAAM,MAAM,AAAC,CAAA,UAAU,QAAQ,IAAI,UAAU,YAAY,IAAI,EAAC,EAAG,WAAW;QAC5E,OAAO,IAAI,UAAU,CAAC,QAAQ,OAAO;IACtC;IAEA,SAAS,kBAAkB,MAAM;QAChC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;QACjC,gBAAgB;QAChB,YAAY;QACZ,SAAS,eAAe,CAAC,YAAY,CAAC,QAAQ,WAAW,OAAO,UAAU;QAC1E,qBAAqB;QACrB,SAAS,KAAK,GAAG,EAAE,QAAQ;QAC3B,MAAM,MAAM;YACX;gBAAC;gBAAS;aAAQ;YAClB;gBAAC;gBAAa;aAAY;YAC1B;gBAAC;gBAAgB;aAAe;YAChC;gBAAC;gBAAiB;aAAgB;YAClC;gBAAC;gBAAe;aAAc;YAC9B;gBAAC;gBAAc;aAAa;YAC5B;gBAAC;gBAAiB;aAAgB;YAClC;gBAAC;gBAAmB;aAAkB;YACtC;gBAAC;gBAAY;aAAW;YACxB;gBAAC;gBAAc;aAAa;YAC5B;gBAAC;gBAAa;aAAY;YAC1B;gBAAC;gBAAa;aAAY;YAC1B;gBAAC;gBAAiB;aAAgB;YAClC;gBAAC;gBAAmB;aAAkB;YACtC;gBAAC;gBAAgB;aAAe;YAChC;gBAAC;gBAAY;aAAW;YACxB;gBAAC;gBAAgB;aAAe;YAChC;gBAAC;gBAAe;aAAc;YAC9B;gBAAC;gBAAc;aAAa;YAC5B;gBAAC;gBAAe;aAAc;YAC9B;gBAAC;gBAAmB;aAAkB;YACtC;gBAAC;gBAAoB;aAAmB;YACxC;gBAAC;gBAAoB;aAAmB;YACxC;gBAAC;gBAAoB;aAAmB;YACxC;gBAAC;gBAAe;aAAc;SAC9B;QACD,KAAK,MAAM,CAAC,IAAI,IAAI,IAAI,IAAK;YAC5B,MAAM,OAAO,SAAS,cAAc,CAAC;YACrC,IAAI,QAAQ,CAAC,CAAC,IAAI,KAAK,WAAW,KAAK,WAAW,GAAG,CAAC,CAAC,IAAI;QAC5D;QACA,eAAe;QACf,MAAM,YAAY,SAAS,cAAc,CAAC;QAC1C,MAAM,cAAc,SAAS,cAAc,CAAC;QAC5C,MAAM,aAAa,SAAS,cAAc,CAAC;QAC3C,MAAM,aAAa,SAAS,cAAc,CAAC;QAC3C,MAAM,aAAa,SAAS,cAAc,CAAC;QAC3C,MAAM,eAAe,SAAS,cAAc,CAAC;QAC7C,IAAI,WAAW,UAAU,WAAW,GAAG,EAAE,gBAAgB;QACzD,IAAI,aAAa,YAAY,WAAW,GAAG,EAAE,kBAAkB;QAC/D,IAAI,YAAY,WAAW,WAAW,GAAG,EAAE,iBAAiB;QAC5D,IAAI,YAAY,WAAW,WAAW,GAAG,EAAE,iBAAiB;QAC5D,IAAI,YAAY,WAAW,WAAW,GAAG,WAAW,OAAO,sBAAY;QAEvE,IAAI,cAAc,aAAa,WAAW,GAAG,WAAW,OAAO,qBAAW;QAC1E,sBAAsB;QACtB,MAAM,MAAM,SAAS,cAAc,CAAC;QACpC,IAAI,KAAK,IAAI,KAAK,GAAG;IACtB;IACA,SAAS,SAAS,KAAK;QACtB,IAAI,UAAU,MAAM,UAAU,QAAQ,UAAU,WAAW,OAAO;QAClE,OAAO,OAAO;IACf;IAEA,SAAS,iBAAiB,CAAC;QAC1B,OAAO,SAAS,MAAM,KAAK,IAAI,IAAI;IACpC;IAEA,SAAS,UAAU,IAAI,EAAE,IAAI;QAC5B,OAAO,OAAO,KAAK;IACpB;IAEA,SAAS,QAAQ,KAAK,EAAE,QAAQ;QAC/B,IAAI,CAAC,SAAS,QAAQ,OAAO;QAC7B,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI;QAC5B,OAAO,KAAK,IAAI,CAAC,QAAQ,SAAS,SAAS;IAC5C;IAEA,SAAS,MAAM,KAAK,EAAE,QAAQ;QAC7B,IAAI,CAAC,SAAS,QAAQ,OAAO;QAC7B,MAAM,SAAS,KAAK,GAAG,CAAC,IAAI;QAC5B,OAAO,KAAK,KAAK,CAAC,AAAC,CAAA,QAAQ,OAAO,OAAO,AAAD,IAAK,UAAU;IACxD;IAEA,SAAS,aAAa,CAAC;QACtB,IAAI,CAAC,SAAS,IAAI,OAAO;QACzB,MAAM,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE;QACxC,OAAO,kBAAkB,OAAO,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,EAAE,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,EAAE;IACpG;IAEA,SAAS,EAAE,EAAE;QAAI,OAAO,SAAS,cAAc,CAAC;IAAK;IAErD,uCAAuC;IACvC,SAAS,aAAa,CAAC;QACtB,OAAO,IAAI,KAAK,GAAG,CAAC,IAAI,GAAG;IAC5B;IAEA,SAAS,qBAAqB,IAAI;QACjC,IAAI,CAAC,QAAQ,SAAS,KAAK,OAAO;QAClC,MAAM,IAAI,OAAO,MAAM,KAAK,CAAC;QAC7B,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,IAAI;IAC3B;IAEA,SAAS,cAAc,MAAM,EAAE,OAAO,EAAE,OAAO;QAC9C,MAAM,EAAE,WAAW,GAAG,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,IAAM,OAAO,EAAE,EAAE,GAAG,WAAW,CAAC;QACnF,MAAM,WAAW,OAAO,WAAW;QACnC,MAAM,YAAY,qBAAqB;QACvC,IAAI,CAAC,SAAS,YAAY;YACzB,6CAA6C;YAC7C,OAAO,WAAW,GAAG,UAAU,OAAO;YACtC,SAAS;YACT;QACD;QACA,MAAM,QAAQ,YAAY,GAAG;QAC7B,SAAS,MAAM,GAAG;YACjB,MAAM,IAAI,KAAK,GAAG,CAAC,GAAG,AAAC,CAAA,MAAM,KAAI,IAAK;YACtC,MAAM,IAAI,aAAa;YACvB,MAAM,UAAU,YAAY,AAAC,CAAA,UAAU,SAAQ,IAAK;YACpD,MAAM,UAAU,WAAW,IAAI,OAAO,QAAQ,OAAO,CAAC,aAAa,KAAK,KAAK,CAAC;YAC9E,OAAO,WAAW,GAAG,UAAU;YAC/B,IAAI,IAAI,GACP,sBAAsB;iBAChB;gBACN,OAAO,WAAW,GAAG,UAAU;gBAC/B,SAAS;YACV;QACD;QACA,sBAAsB;IACvB;IAEA,SAAS,SAAS,OAAO;QACxB,MAAM,OAAO,QAAQ,OAAO,CAAC;QAC7B,IAAI,CAAC,MAAM;QACX,KAAK,SAAS,CAAC,MAAM,CAAC;QACtB,oCAAoC;QAC/B,KAAK,WAAW;QACrB,KAAK,SAAS,CAAC,GAAG,CAAC;IACpB;IAEA,MAAM,KAAK;QACV,WAAW,EAAE;QACb,aAAa,EAAE;QACf,YAAY,EAAE;QACd,YAAY,EAAE;QACd,YAAY,EAAE;QACd,cAAc,EAAE;QAChB,cAAc,EAAE;QAChB,UAAU,EAAE;QACZ,WAAW,EAAE;QACb,UAAU,EAAE;QACZ,SAAS,EAAE;QACX,UAAU,EAAE;QACZ,cAAc,EAAE;QAChB,eAAe,EAAE;QACjB,eAAe,EAAE;QACjB,eAAe,EAAE;IAClB;IAEA,SAAS;QACR,sCAAsC;QACtC,MAAM,YAAY,iBAAiB,SAAS,GAAG,SAAS,CAAC,KAAK,KAAK,KAAK,IAAI,GAAG,SAAS,CAAC,KAAK;QAC9F,MAAM,cAAc,iBAAiB,SAAS,GAAG,WAAW,CAAC,KAAK,KAAK,KAAK,IAAI,GAAG,WAAW,CAAC,KAAK;QACpG,MAAM,aAAa,iBAAiB,SAAS,GAAG,UAAU,CAAC,KAAK,KAAK,KAAK,IAAI,GAAG,UAAU,CAAC,KAAK;QACjG,MAAM,aAAa,iBAAiB,SAAS,GAAG,UAAU,CAAC,KAAK,KAAK,KAAK,IAAI,GAAG,UAAU,CAAC,KAAK;QACjG,MAAM,aAAa,iBAAiB,SAAS,GAAG,UAAU,CAAC,KAAK;QAChE,MAAM,eAAe,iBAAiB,SAAS,GAAG,YAAY,CAAC,KAAK;QAEpE,OAAO;YAAE;YAAW;YAAa;YAAY;YAAY;YAAY;QAAa;IACnF;IAEA,SAAS;QACR,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG;QAErF,mBAAmB;QACnB,IAAI,CAAC,SAAS,cAAc,CAAC,SAAS,gBAAgB,CAAC,SAAS,eAAe,CAAC,SAAS,eAAe,CAAC,SAAS,eAAe,CAAC,SAAS,eAAe;YACzJ;YACA;QACD;QAEA,MAAM,mBAAmB,AAAC,YAAY,OAAS,cAAc;QAC7D,MAAM,iBAAiB,UAAU,YAAY;QAE7C,IAAI,oBAAoB,KAAK,kBAAkB,KAAK,cAAc,GAAG;YACpE;YACA;QACD;QAEA,kCAAkC;QAClC,MAAM,YAAY,KAAK,KAAK,CAAC,mBAAmB;QAChD,IAAI,aAAa,GAAG;YACnB;YACA;QACD;QAEA,2BAA2B;QAC3B,MAAM,eAAe,eAAe,IAAI,KAAK,KAAK,CAAC,eAAe,cAAc;QAChF,IAAI,gBAAgB,GAAG;YACtB,4EAA4E;YAC5E,GAAG,SAAS,CAAC,WAAW,GAAG,OAAO;YAClC,GAAG,QAAQ,CAAC,WAAW,GAAG,AAAC,CAAA,IAAI,CAAC,cAAc,IAAI,KAAK,EAAE,AAAD,EAAG,iBAAiB;YAC5E,MAAM,gBAAgB,QAAQ,YAAY,YAAY;YACtD,GAAG,OAAO,CAAC,WAAW,GAAG,aAAa;YACtC,GAAG,QAAQ,CAAC,WAAW,GAAG,aAAa,QAAQ,AAAC,CAAA,YAAY,CAAA,IAAK,YAAY;YAC7E,GAAG,YAAY,CAAC,WAAW,GAAG;YAC9B,GAAG,aAAa,CAAC,WAAW,GAAG;YAC/B,GAAG,aAAa,CAAC,WAAW,GAAG;YAC/B,GAAG,aAAa,CAAC,WAAW,GAAG;YAC/B;QACD;QAEA,mBAAmB;QACnB,MAAM,aAAa,KAAK,KAAK,CAAC,YAAY;QAC1C,MAAM,gBAAgB,YAAY;QAClC,MAAM,eAAe,gBAAgB;QACrC,MAAM,cAAc,eAAgB,aAAa,IAAK;QACtD,MAAM,WAAW,KAAK,GAAG,CAAC,GAAG,cAAc;QAE3C,wBAAwB;QACxB,IAAI,gBAAgB;QACpB,IAAI,aAAa,cAChB,gBAAgB,WAAW,qBAAqB;aAC1C,IAAI,cACV,gBAAgB;aAEhB,gBAAgB,cAAc,8CAA8C;QAG7E,eAAe;QACf,MAAM,gBAAgB,QAAQ,YAAY,YAAY;QACtD,MAAM,iBAAiB,QAAQ,AAAC,CAAA,YAAY,CAAA,IAAK,YAAY;QAC7D,MAAM,sBAAsB,QAAQ,gBAAgB,YAAY;QAEhE,2DAA2D;QAC3D,MAAM,iBAAiB,KAAK,GAAG,CAAC,WAAW;QAC3C,MAAM,uBAAuB,QAAQ,iBAAiB,YAAY;QAElE,gCAAgC;QAChC,cAAc,GAAG,SAAS,EAAE,WAAW;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,OAAO;QAAG;QACjG,cAAc,GAAG,QAAQ,EAAE,UAAU;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,OAAO;QAAG;QAC/F,cAAc,GAAG,OAAO,EAAE,eAAe;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,aAAa,OAAO;QAAI;QACjH,cAAc,GAAG,QAAQ,EAAE,gBAAgB;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,aAAa,OAAO;QAAI;QACnH,cAAc,GAAG,YAAY,EAAE,cAAc;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,OAAO;QAAG;QACvG,cAAc,GAAG,aAAa,EAAE,eAAe;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,OAAO;QAAG;QACzG,cAAc,GAAG,aAAa,EAAE,sBAAsB;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,aAAa,OAAO;QAAI;QAC9H,cAAc,GAAG,aAAa,EAAE,qBAAqB;YAAE,UAAU;YAAK,UAAU;YAAG,WAAW,CAAC,IAAM,aAAa,OAAO;QAAI;IAC9H;IAEA,SAAS;QACR,GAAG,SAAS,CAAC,WAAW,GAAG;QAC3B,GAAG,QAAQ,CAAC,WAAW,GAAG;QAC1B,GAAG,OAAO,CAAC,WAAW,GAAG;QACzB,GAAG,QAAQ,CAAC,WAAW,GAAG;QAC1B,GAAG,YAAY,CAAC,WAAW,GAAG;QAC9B,GAAG,aAAa,CAAC,WAAW,GAAG;QAC/B,GAAG,aAAa,CAAC,WAAW,GAAG;QAC/B,GAAG,aAAa,CAAC,WAAW,GAAG;IAChC;IAEA,SAAS;QACR,GAAG,YAAY,CAAC,gBAAgB,CAAC,SAAS;QAC1C,GAAG,QAAQ,CAAC,gBAAgB,CAAC,SAAS;YACrC,GAAG,SAAS,CAAC,KAAK,GAAG;YACrB,GAAG,WAAW,CAAC,KAAK,GAAG;YACvB,GAAG,UAAU,CAAC,KAAK,GAAG;YACtB,GAAG,UAAU,CAAC,KAAK,GAAG;YACtB,GAAG,UAAU,CAAC,KAAK,GAAG;YACtB,GAAG,YAAY,CAAC,KAAK,GAAG;YACxB;QACD;QACA,MAAM,MAAM,SAAS,cAAc,CAAC;QACpC,IAAI,KACH,IAAI,gBAAgB,CAAC,UAAU;YAC9B,MAAM,SAAS,IAAI,KAAK,KAAK,OAAO,OAAO;YAC3C,aAAa,OAAO,CAAC,UAAU;YAC/B,kBAAkB;QACnB;IAEF;IAEA,aAAa;IACb,MAAM,gBAAgB;IACtB,kBAAkB;IAClB;IACA;AACD,CAAA","sources":["script.js"],"sourcesContent":["(function () {\r\n\t// ---- i18n ----\r\n\tconst I18N = {\r\n\t\tzh: {\r\n\t\t\tlangName: '中文',\r\n\t\t\ttitle: '模拟赛车燃油计算器',\r\n\t\t\tdocTitle: '模拟赛车燃油计算器',\r\n\t\t\tintroNote: '快速计算任何模拟赛车游戏（包括 ACC、iRacing、Assetto Corsa Evo、AMS2 等）的正确燃油量。只需输入每圈燃油量、比赛距离和油箱容量，即可查看需要进站次数和起始燃油量。',\r\n\t\t\tinputsHeader: '输入',\r\n\t\t\tresultsHeader: '结果',\r\n\t\t\tlblRaceTime: '比赛时间',\r\n\t\t\tlblLapTime: '平均单圈时间',\r\n\t\t\tlblFuelPerLap: '每圈油耗',\r\n\t\t\tlblTankCapacity: '油箱油量',\r\n\t\t\tplaceholderHours: '小时',\r\n\t\t\tplaceholderMinutes: '分钟',\r\n\t\t\tplaceholderLapMin: '分',\r\n\t\t\tplaceholderLapSec: '秒',\r\n\t\t\tsufHours: '小时',\r\n\t\t\tsufMinutes: '分钟',\r\n\t\t\tsufLapMin: '分',\r\n\t\t\tsufLapSec: '秒',\r\n\t\t\tsufFuelPerLap: '升/圈',\r\n\t\t\tsufTankCapacity: '升',\r\n\t\t\tbtnCalculate: '计算',\r\n\t\t\tbtnReset: '清空',\r\n\t\t\tlblTotalLaps: '总圈数',\r\n\t\t\tlblPitStops: '需要进站加油（次数）',\r\n\t\t\tlblMinFuel: '完赛最低需要燃油量',\r\n\t\t\tlblSafeFuel: '安全燃油（总圈数+2）',\r\n\t\t\tlblLapsPerStint: '每段比赛圈数（每箱）',\r\n\t\t\tlblLastStintLaps: '最后阶段圈数',\r\n\t\t\tlblStintFuelList: '每段行程的燃油消耗',\r\n\t\t\tlblLastStintFuel: '最后阶段的燃料量',\r\n\t\t\tformulaNote: '说明：总圈数按 ⌊比赛总时长 ÷ 平均单圈时间⌋ 计算。',\r\n\t\t\tcannotCompleteLap: '无法完成一圈（油箱容量过小）',\r\n\t\t\tunitLiter: '升'\r\n\t\t},\r\n\t\ten: {\r\n\t\t\tlangName: 'English',\r\n\t\t\ttitle: 'Sim Racing Fuel Calculator',\r\n\t\t\tdocTitle: 'Sim Racing Fuel Calculator',\r\n\t\t\tintroNote: 'Quickly calculate the right fuel for any sim racing game (ACC, iRacing, Assetto Corsa Evo, AMS2, etc.). Enter fuel per lap, race duration and tank capacity to see pit stops and starting fuel.',\r\n\t\t\tinputsHeader: 'Inputs',\r\n\t\t\tresultsHeader: 'Results',\r\n\t\t\tlblRaceTime: 'Race duration',\r\n\t\t\tlblLapTime: 'Average lap time',\r\n\t\t\tlblFuelPerLap: 'Fuel per lap',\r\n\t\t\tlblTankCapacity: 'Tank capacity',\r\n\t\t\tplaceholderHours: 'Hours',\r\n\t\t\tplaceholderMinutes: 'Minutes',\r\n\t\t\tplaceholderLapMin: 'Min',\r\n\t\t\tplaceholderLapSec: 'Sec',\r\n\t\t\tsufHours: 'h',\r\n\t\t\tsufMinutes: 'min',\r\n\t\t\tsufLapMin: 'min',\r\n\t\t\tsufLapSec: 'sec',\r\n\t\t\tsufFuelPerLap: 'L/lap',\r\n\t\t\tsufTankCapacity: 'L',\r\n\t\t\tbtnCalculate: 'Calculate',\r\n\t\t\tbtnReset: 'Reset',\r\n\t\t\tlblTotalLaps: 'Total laps',\r\n\t\t\tlblPitStops: 'Pit stops (count)',\r\n\t\t\tlblMinFuel: 'Minimum fuel to finish',\r\n\t\t\tlblSafeFuel: 'Safe fuel (laps+2)',\r\n\t\t\tlblLapsPerStint: 'Laps per stint (per tank)',\r\n\t\t\tlblLastStintLaps: 'Last stint laps',\r\n\t\t\tlblStintFuelList: 'Fuel for first stint',\r\n\t\t\tlblLastStintFuel: 'Fuel for last stint',\r\n\t\t\tformulaNote: 'Note: Total laps = ⌊race duration ÷ average lap time⌋.',\r\n\t\t\tcannotCompleteLap: 'Cannot complete a lap (tank capacity too small)',\r\n\t\t\tunitLiter: 'L'\r\n\t\t}\r\n\t};\r\n\r\n\tlet currentLocale = 'zh';\r\n\r\n\tfunction detectLocale() {\r\n\t\tconst saved = localStorage.getItem('locale');\r\n\t\tif (saved === 'zh' || saved === 'en') return saved;\r\n\t\tconst nav = (navigator.language || navigator.userLanguage || '').toLowerCase();\r\n\t\treturn nav.startsWith('zh') ? 'zh' : 'en';\r\n\t}\r\n\r\n\tfunction applyTranslations(locale) {\r\n\t\tconst t = I18N[locale] || I18N.zh;\r\n\t\tcurrentLocale = locale;\r\n\t\t// html lang\r\n\t\tdocument.documentElement.setAttribute('lang', locale === 'zh' ? 'zh-CN' : 'en');\r\n\t\t// document and title\r\n\t\tdocument.title = t.docTitle;\r\n\t\tconst map = [\r\n\t\t\t['title', 'title'],\r\n\t\t\t['introNote', 'introNote'],\r\n\t\t\t['inputsHeader', 'inputsHeader'],\r\n\t\t\t['resultsHeader', 'resultsHeader'],\r\n\t\t\t['lblRaceTime', 'lblRaceTime'],\r\n\t\t\t['lblLapTime', 'lblLapTime'],\r\n\t\t\t['lblFuelPerLap', 'lblFuelPerLap'],\r\n\t\t\t['lblTankCapacity', 'lblTankCapacity'],\r\n\t\t\t['sufHours', 'sufHours'],\r\n\t\t\t['sufMinutes', 'sufMinutes'],\r\n\t\t\t['sufLapMin', 'sufLapMin'],\r\n\t\t\t['sufLapSec', 'sufLapSec'],\r\n\t\t\t['sufFuelPerLap', 'sufFuelPerLap'],\r\n\t\t\t['sufTankCapacity', 'sufTankCapacity'],\r\n\t\t\t['calculateBtn', 'btnCalculate'],\r\n\t\t\t['resetBtn', 'btnReset'],\r\n\t\t\t['lblTotalLaps', 'lblTotalLaps'],\r\n\t\t\t['lblPitStops', 'lblPitStops'],\r\n\t\t\t['lblMinFuel', 'lblMinFuel'],\r\n\t\t\t['lblSafeFuel', 'lblSafeFuel'],\r\n\t\t\t['lblLapsPerStint', 'lblLapsPerStint'],\r\n\t\t\t['lblLastStintLaps', 'lblLastStintLaps'],\r\n\t\t\t['lblStintFuelList', 'lblStintFuelList'],\r\n\t\t\t['lblLastStintFuel', 'lblLastStintFuel'],\r\n\t\t\t['formulaNote', 'formulaNote']\r\n\t\t];\r\n\t\tfor (const [id, key] of map) {\r\n\t\t\tconst node = document.getElementById(id);\r\n\t\t\tif (node && t[key] !== undefined) node.textContent = t[key];\r\n\t\t}\r\n\t\t// placeholders\r\n\t\tconst raceHours = document.getElementById('raceHours');\r\n\t\tconst raceMinutes = document.getElementById('raceMinutes');\r\n\t\tconst lapMinutes = document.getElementById('lapMinutes');\r\n\t\tconst lapSeconds = document.getElementById('lapSeconds');\r\n\t\tconst fuelPerLap = document.getElementById('fuelPerLap');\r\n\t\tconst tankCapacity = document.getElementById('tankCapacity');\r\n\t\tif (raceHours) raceHours.placeholder = t.placeholderHours;\r\n\t\tif (raceMinutes) raceMinutes.placeholder = t.placeholderMinutes;\r\n\t\tif (lapMinutes) lapMinutes.placeholder = t.placeholderLapMin;\r\n\t\tif (lapSeconds) lapSeconds.placeholder = t.placeholderLapSec;\r\n\t\tif (fuelPerLap) fuelPerLap.placeholder = locale === 'zh' ? '例如 2.75' : 'e.g. 2.75';\r\n\r\n\t\tif (tankCapacity) tankCapacity.placeholder = locale === 'zh' ? '例如 100' : 'e.g. 100';\r\n\t\t// dropdown value sync\r\n\t\tconst sel = document.getElementById('langSelect');\r\n\t\tif (sel) sel.value = locale;\r\n\t}\r\n\tfunction toNumber(value) {\r\n\t\tif (value === '' || value === null || value === undefined) return NaN;\r\n\t\treturn Number(value);\r\n\t}\r\n\r\n\tfunction clampNonNegative(n) {\r\n\t\treturn isFinite(n) && n >= 0 ? n : NaN;\r\n\t}\r\n\r\n\tfunction toSeconds(mins, secs) {\r\n\t\treturn mins * 60 + secs;\r\n\t}\r\n\r\n\tfunction roundUp(value, decimals) {\r\n\t\tif (!isFinite(value)) return NaN;\r\n\t\tconst factor = Math.pow(10, decimals);\r\n\t\treturn Math.ceil(value * factor - 1e-10) / factor;\r\n\t}\r\n\r\n\tfunction round(value, decimals) {\r\n\t\tif (!isFinite(value)) return NaN;\r\n\t\tconst factor = Math.pow(10, decimals);\r\n\t\treturn Math.round((value + Number.EPSILON) * factor) / factor;\r\n\t}\r\n\r\n\tfunction formatLiters(n) {\r\n\t\tif (!isFinite(n)) return '-';\r\n\t\tconst t = I18N[currentLocale] || I18N.zh;\r\n\t\treturn currentLocale === 'zh' ? `${n.toFixed(2)} ${t.unitLiter}` : `${n.toFixed(2)} ${t.unitLiter}`;\r\n\t}\r\n\r\n\tfunction $(id) { return document.getElementById(id); }\r\n\r\n\t// ---- easing + animation helpers ----\r\n\tfunction easeOutCubic(t) {\r\n\t\treturn 1 - Math.pow(1 - t, 3);\r\n\t}\r\n\r\n\tfunction parseNumericFromText(text) {\r\n\t\tif (!text || text === '-') return NaN;\r\n\t\tconst m = String(text).match(/-?\\d+(?:\\.\\d+)?/);\r\n\t\treturn m ? Number(m[0]) : NaN;\r\n\t}\r\n\r\n\tfunction animateNumber(elNode, toValue, options) {\r\n\t\tconst { duration = 500, decimals = 0, formatter = (v) => String(v) } = options || {};\r\n\t\tconst fromText = elNode.textContent;\r\n\t\tconst fromValue = parseNumericFromText(fromText);\r\n\t\tif (!isFinite(fromValue)) {\r\n\t\t\t// no previous numeric value, set immediately\r\n\t\t\telNode.textContent = formatter(Number(toValue));\r\n\t\t\tbumpCard(elNode);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst start = performance.now();\r\n\t\tfunction frame(now) {\r\n\t\t\tconst t = Math.min(1, (now - start) / duration);\r\n\t\t\tconst e = easeOutCubic(t);\r\n\t\t\tconst current = fromValue + (toValue - fromValue) * e;\r\n\t\t\tconst rounded = decimals > 0 ? Number(current.toFixed(decimals)) : Math.round(current);\r\n\t\t\telNode.textContent = formatter(rounded);\r\n\t\t\tif (t < 1) {\r\n\t\t\t\trequestAnimationFrame(frame);\r\n\t\t\t} else {\r\n\t\t\t\telNode.textContent = formatter(toValue);\r\n\t\t\t\tbumpCard(elNode);\r\n\t\t\t}\r\n\t\t}\r\n\t\trequestAnimationFrame(frame);\r\n\t}\r\n\r\n\tfunction bumpCard(valueEl) {\r\n\t\tconst card = valueEl.closest('.result-item');\r\n\t\tif (!card) return;\r\n\t\tcard.classList.remove('bump');\r\n\t\t// force reflow to restart animation\r\n\t\tvoid card.offsetWidth;\r\n\t\tcard.classList.add('bump');\r\n\t}\r\n\r\n\tconst el = {\r\n\t\traceHours: $('raceHours'),\r\n\t\traceMinutes: $('raceMinutes'),\r\n\t\tlapMinutes: $('lapMinutes'),\r\n\t\tlapSeconds: $('lapSeconds'),\r\n\t\tfuelPerLap: $('fuelPerLap'),\r\n\t\ttankCapacity: $('tankCapacity'),\r\n\t\tcalculateBtn: $('calculateBtn'),\r\n\t\tresetBtn: $('resetBtn'),\r\n\t\ttotalLaps: $('totalLaps'),\r\n\t\tpitStops: $('pitStops'),\r\n\t\tminFuel: $('minFuel'),\r\n\t\tsafeFuel: $('safeFuel'),\r\n\t\tlapsPerStint: $('lapsPerStint'),\r\n\t\tlastStintLaps: $('lastStintLaps'),\r\n\t\tstintFuelList: $('stintFuelList'),\r\n\t\tlastStintFuel: $('lastStintFuel')\r\n\t};\r\n\r\n\tfunction readInputs() {\r\n\t\t// Time fields default to 0 when empty\r\n\t\tconst raceHours = clampNonNegative(toNumber(el.raceHours.value === '' ? 0 : el.raceHours.value));\r\n\t\tconst raceMinutes = clampNonNegative(toNumber(el.raceMinutes.value === '' ? 0 : el.raceMinutes.value));\r\n\t\tconst lapMinutes = clampNonNegative(toNumber(el.lapMinutes.value === '' ? 0 : el.lapMinutes.value));\r\n\t\tconst lapSeconds = clampNonNegative(toNumber(el.lapSeconds.value === '' ? 0 : el.lapSeconds.value));\r\n\t\tconst fuelPerLap = clampNonNegative(toNumber(el.fuelPerLap.value));\r\n\t\tconst tankCapacity = clampNonNegative(toNumber(el.tankCapacity.value));\r\n\r\n\t\treturn { raceHours, raceMinutes, lapMinutes, lapSeconds, fuelPerLap, tankCapacity };\r\n\t}\r\n\r\n\tfunction compute() {\r\n\t\tconst { raceHours, raceMinutes, lapMinutes, lapSeconds, fuelPerLap, tankCapacity } = readInputs();\r\n\r\n\t\t// Basic validation\r\n\t\tif (!isFinite(raceHours) || !isFinite(raceMinutes) || !isFinite(lapMinutes) || !isFinite(lapSeconds) || !isFinite(fuelPerLap) || !isFinite(tankCapacity)) {\r\n\t\t\tsetOutputsInvalid();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst raceTotalSeconds = (raceHours * 3600) + (raceMinutes * 60);\r\n\t\tconst lapTimeSeconds = toSeconds(lapMinutes, lapSeconds);\r\n\r\n\t\tif (raceTotalSeconds <= 0 || lapTimeSeconds <= 0 || fuelPerLap <= 0) {\r\n\t\t\tsetOutputsInvalid();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Total laps by floor of time/lap\r\n\t\tconst totalLaps = Math.floor(raceTotalSeconds / lapTimeSeconds);\r\n\t\tif (totalLaps <= 0) {\r\n\t\t\tsetOutputsInvalid();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Stint laps per full tank\r\n\t\tconst lapsPerStint = tankCapacity > 0 ? Math.floor(tankCapacity / fuelPerLap) : 0;\r\n\t\tif (lapsPerStint <= 0) {\r\n\t\t\t// Cannot complete any lap with current per-lap fuel usage and tank capacity\r\n\t\t\tel.totalLaps.textContent = String(totalLaps);\r\n\t\t\tel.pitStops.textContent = (I18N[currentLocale] || I18N.zh).cannotCompleteLap;\r\n\t\t\tconst minFuelLiters = roundUp(totalLaps * fuelPerLap, 2);\r\n\t\t\tel.minFuel.textContent = formatLiters(minFuelLiters);\r\n\t\t\tel.safeFuel.textContent = formatLiters(roundUp((totalLaps + 2) * fuelPerLap, 2));\r\n\t\t\tel.lapsPerStint.textContent = '-';\r\n\t\t\tel.lastStintLaps.textContent = '-';\r\n\t\t\tel.stintFuelList.textContent = '-';\r\n\t\t\tel.lastStintFuel.textContent = '-';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Stints breakdown\r\n\t\tconst fullStints = Math.floor(totalLaps / lapsPerStint);\r\n\t\tconst remainderLaps = totalLaps % lapsPerStint;\r\n\t\tconst hasRemainder = remainderLaps > 0;\r\n\t\tconst totalStints = hasRemainder ? (fullStints + 1) : fullStints;\r\n\t\tconst pitStops = Math.max(0, totalStints - 1);\r\n\r\n\t\t// Last stint laps logic\r\n\t\tlet lastStintLaps = 0;\r\n\t\tif (totalLaps <= lapsPerStint) {\r\n\t\t\tlastStintLaps = totalLaps; // no refuel scenario\r\n\t\t} else if (hasRemainder) {\r\n\t\t\tlastStintLaps = remainderLaps;\r\n\t\t} else {\r\n\t\t\tlastStintLaps = lapsPerStint; // exact division: final stint is a full stint\r\n\t\t}\r\n\r\n\t\t// Fuel figures\r\n\t\tconst minFuelLiters = roundUp(totalLaps * fuelPerLap, 2);\r\n\t\tconst safeFuelLiters = roundUp((totalLaps + 2) * fuelPerLap, 2);\r\n\t\tconst lastStintFuelLiters = roundUp(lastStintLaps * fuelPerLap, 2);\r\n\r\n\t\t// Only show the fuel consumption for the first stint (前一段)\r\n\t\tconst firstStintLaps = Math.min(totalLaps, lapsPerStint);\r\n\t\tconst firstStintFuelLiters = roundUp(firstStintLaps * fuelPerLap, 2);\r\n\r\n\t\t// Render with easing animations\r\n\t\tanimateNumber(el.totalLaps, totalLaps, { duration: 500, decimals: 0, formatter: (v) => String(v) });\r\n\t\tanimateNumber(el.pitStops, pitStops, { duration: 500, decimals: 0, formatter: (v) => String(v) });\r\n\t\tanimateNumber(el.minFuel, minFuelLiters, { duration: 600, decimals: 2, formatter: (v) => formatLiters(Number(v)) });\r\n\t\tanimateNumber(el.safeFuel, safeFuelLiters, { duration: 600, decimals: 2, formatter: (v) => formatLiters(Number(v)) });\r\n\t\tanimateNumber(el.lapsPerStint, lapsPerStint, { duration: 500, decimals: 0, formatter: (v) => String(v) });\r\n\t\tanimateNumber(el.lastStintLaps, lastStintLaps, { duration: 500, decimals: 0, formatter: (v) => String(v) });\r\n\t\tanimateNumber(el.stintFuelList, firstStintFuelLiters, { duration: 600, decimals: 2, formatter: (v) => formatLiters(Number(v)) });\r\n\t\tanimateNumber(el.lastStintFuel, lastStintFuelLiters, { duration: 600, decimals: 2, formatter: (v) => formatLiters(Number(v)) });\r\n\t}\r\n\r\n\tfunction setOutputsInvalid() {\r\n\t\tel.totalLaps.textContent = '-';\r\n\t\tel.pitStops.textContent = '-';\r\n\t\tel.minFuel.textContent = '-';\r\n\t\tel.safeFuel.textContent = '-';\r\n\t\tel.lapsPerStint.textContent = '-';\r\n\t\tel.lastStintLaps.textContent = '-';\r\n\t\tel.stintFuelList.textContent = '-';\r\n\t\tel.lastStintFuel.textContent = '-';\r\n\t}\r\n\r\n\tfunction wire() {\r\n\t\tel.calculateBtn.addEventListener('click', compute);\r\n\t\tel.resetBtn.addEventListener('click', () => {\r\n\t\t\tel.raceHours.value = '0';\r\n\t\t\tel.raceMinutes.value = '0';\r\n\t\t\tel.lapMinutes.value = '0';\r\n\t\t\tel.lapSeconds.value = '0';\r\n\t\t\tel.fuelPerLap.value = '';\r\n\t\t\tel.tankCapacity.value = '';\r\n\t\t\tsetOutputsInvalid();\r\n\t\t});\r\n\t\tconst sel = document.getElementById('langSelect');\r\n\t\tif (sel) {\r\n\t\t\tsel.addEventListener('change', () => {\r\n\t\t\t\tconst locale = sel.value === 'en' ? 'en' : 'zh';\r\n\t\t\t\tlocalStorage.setItem('locale', locale);\r\n\t\t\t\tapplyTranslations(locale);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// Initialize\r\n\tconst initialLocale = detectLocale();\r\n\tapplyTranslations(initialLocale);\r\n\twire();\r\n\tsetOutputsInvalid();\r\n})();\r\n\r\n\r\n"],"names":[],"version":3,"file":"fuel-calculator.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}